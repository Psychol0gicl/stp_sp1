% Define the number of nodes
numNodes = 6;

% Create a homogeneous transition probability matrix with 1/6
% P = ones(numNodes, numNodes) / numNodes;

P = [ 
    1 0 0 0 0 0;
    1 0 0 0 0 0;
    0 0.5 0 0.5 0 0;
    0 0 0.5 0 0.5 0;
    0 0 0 0 0 1;
    0 0 0 0 0 1;
];

% Plot the Markov chain graph
graphObj = digraph(P);
plot(graphObj, 'EdgeLabel', graphObj.Edges.Weight);
title('Homogeneous Markov Chain with absorbing states.');


%%
% Identify transient and absorbing states
absorbing = [1 6]
transient = [2 3 4 5]

% Extract Q matrix (transient-to-transient)
Q = P(transient, transient);
disp("Matice Q:")
disp(Q)


I = eye(size(Q));
T = inv(I - Q);  % Fundamental matrix

% Display expected number of times in each transient state before absorption
disp('Expected number of times in transient state j starting from i:');
disp(T);

size_T = size(T)
t = T * ones(size);
disp(t)

t = sum(N, 2);
disp(t)
